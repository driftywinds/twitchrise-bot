name: Build and Push Multi-Arch Docker Images

on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Docker image name (e.g. user/image)'
        required: true
        type: string
      tags:
        description: 'Comma-separated tags (e.g. v1.01,latest,dev,beta)'
        required: true
        type: string
      push_dockerhub:
        description: 'Push to Docker Hub'
        required: false
        type: boolean
        default: true
      push_ghcr:
        description: 'Push to GitHub Container Registry'
        required: false
        type: boolean
        default: true
      push_quay:
        description: 'Push to Quay.io'
        required: false
        type: boolean
        default: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      if: ${{ inputs.push_dockerhub == 'true' }}
      uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to GitHub Container Registry
      if: ${{ inputs.push_ghcr == 'true' }}
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Log in to Quay.io
      if: ${{ inputs.push_quay == 'true' }}
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Prepare tags
      id: prepare_tags
      run: |
        I="${{ inputs.image_name }}"
        # Remove spaces from tags and split by comma
        TAGS_RAW="${{ inputs.tags }}"
        TAGS=$(echo $TAGS_RAW | tr -d ' ' | tr ',' '\n')
        echo "image_name=$I" >> $GITHUB_OUTPUT
        echo "tags=$TAGS_RAW" >> $GITHUB_OUTPUT
        echo "::set-output name=tags_list::$TAGS_RAW"
        echo "tag_array<<EOF" >> $GITHUB_OUTPUT
        echo "$TAGS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Build Docker image (multi-arch)
      id: build_image
      run: |
        set -e
        image_name="${{ inputs.image_name }}"
        tags_raw="${{ inputs.tags }}"
        tags=$(echo $tags_raw | tr -d ' ' | tr ',' ' ')
        
        # Build with all tags on local docker cache (no push)
        # Use buildx to build for linux/amd64,linux/arm64
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          --load \
          $(for t in $tags; do echo "-t $image_name:$t "; done) \
          .
      shell: bash

    - name: Push to Docker Hub
      if: ${{ inputs.push_dockerhub == 'true' }}
      run: |
        set +e
        image_name="${{ inputs.image_name }}"
        tags_raw="${{ inputs.tags }}"
        tags=$(echo $tags_raw | tr -d ' ' | tr ',' ' ')
        error=0
        for tag in $tags; do
          docker tag "$image_name:$tag" "docker.io/$image_name:$tag"
        done
        for tag in $tags; do
          echo "Pushing docker.io/$image_name:$tag"
          docker push "docker.io/$image_name:$tag" || error=1
        done
        if [ $error -ne 0 ]; then
          echo "Warning: Some pushes to Docker Hub failed."
        fi
      shell: bash

    - name: Push to GitHub Container Registry
      if: ${{ inputs.push_ghcr == 'true' }}
      run: |
        set +e
        image_name="${{ inputs.image_name }}"
        tags_raw="${{ inputs.tags }}"
        tags=$(echo $tags_raw | tr -d ' ' | tr ',' ' ')
        error=0
        for tag in $tags; do
          docker tag "$image_name:$tag" "ghcr.io/${{ github.repository_owner }}/$image_name:$tag"
        done
        for tag in $tags; do
          echo "Pushing ghcr.io/${{ github.repository_owner }}/$image_name:$tag"
          docker push "ghcr.io/${{ github.repository_owner }}/$image_name:$tag" || error=1
        done
        if [ $error -ne 0 ]; then
          echo "Warning: Some pushes to GHCR failed."
        fi
      shell: bash

    - name: Push to Quay.io
      if: ${{ inputs.push_quay == 'true' }}
      run: |
        set +e
        image_name="${{ inputs.image_name }}"
        tags_raw="${{ inputs.tags }}"
        tags=$(echo $tags_raw | tr -d ' ' | tr ',' ' ')
        error=0
        for tag in $tags; do
          docker tag "$image_name:$tag" "quay.io/$image_name:$tag"
        done
        for tag in $tags; do
          echo "Pushing quay.io/$image_name:$tag"
          docker push "quay.io/$image_name:$tag" || error=1
        done
        if [ $error -ne 0 ]; then
          echo "Warning: Some pushes to Quay.io failed."
        fi
      shell: bash
